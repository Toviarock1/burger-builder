{"version":3,"sources":["containers/Auth/Auth.js","components/UI/Spinner/Spinner.jsx","components/UI/Spinner/Spinner.module.css","components/UI/Button/Button.jsx","components/UI/Button/Button.module.css","components/UI/Input/Input.jsx","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css"],"names":["Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","event","controlName","updatedControls","updateObject","target","checkValidity","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","formElementsArray","key","push","id","config","form","map","formElement","invalid","shouldValidate","changed","loading","errorMessage","error","message","className","classes","onSubmit","btnType","clicked","Component","connect","auth","isAuthenticated","token","burgerBuilder","building","dispatch","actions","spinner","Loader","module","exports","button","Button","join","disabled","onClick","children","input","inputElement","validationError","inputClasses","InputElement","ValidationError","Invalid","onChange","options","option","displayValue","Input","Label","label"],"mappings":"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","file":"static/js/5.7c52fd18.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { updateObject, checkValidity } from '../../shared/utility';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    inputChangedHandler = ( event, controlName ) => {\r\n        const updatedControls = updateObject(this.state.controls,{\r\n            [controlName]: updateObject(this.state.controls[controlName],{\r\n            value: event.target.value,\r\n                valid: checkValidity( event.target.value, this.state.controls[controlName].validation ),\r\n                touched: true\r\n            })\r\n        });\r\n        this.setState( { controls: updatedControls } );\r\n    }\r\n\r\n    submitHandler = ( event ) => {\r\n        event.preventDefault();\r\n        this.props.onAuth( this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup );\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup};\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for ( let key in this.state.controls ) {\r\n            formElementsArray.push( {\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            } );\r\n        }\r\n\r\n        let form = formElementsArray.map( formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\r\n        ) );\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button \r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: ( email, password, isSignup ) => dispatch( actions.auth( email, password, isSignup ) ),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( Auth );","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst spinner = () => <div className={classes.Loader}>Loading...</div>;\n\nexport default spinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1bsNR\",\"load6\":\"Spinner_load6__1tFAj\",\"round\":\"Spinner_round__3LW_j\"};","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n\t<button\n\t\tclassName={[classes.Button, classes[props.btnType]].join(' ')}\n\t\tdisabled={props.disabled}\n\t\tonClick={props.clicked}>\n\t\t\t{props.children}\n\t</button>\n);\n\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__28wyt\",\"Success\":\"Button_Success__12enq\",\"Danger\":\"Button_Danger__3iZLJ\"};","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\tlet inputElement = null;\r\n\tlet validationError = null;\r\n\tconst inputClasses = [classes.InputElement];\r\n\r\n\tif(props.invalid && props.touched) {\r\n\t\tvalidationError = (<p className={classes.ValidationError} >Please enter a valid value</p>);\r\n\t}\r\n\r\n\tif(props.invalid && props.shouldValidate && props.touched) {\r\n\t\tinputClasses.push(classes.Invalid);\r\n\t}\r\n\r\n\tswitch (props.elementType){\r\n\t\tcase ('input'):\r\n\t\t\tinputElement = <input className={inputClasses.join(' ')}\r\n\t\t\tonChange={props.changed} {...props.elementConfig} value={props.value} />;\r\n\t\t\tbreak;\r\n\t\tcase ('textarea'):\r\n\t\t\tinputElement = <textarea className={inputClasses.join(' ')}\r\n\t\t\tonChange={props.changed} {...props.elementConfig} value={props.value} />;\r\n\t\t\tbreak;\r\n\t\tcase ('select'):\r\n\t\t\tinputElement = (<select\tclassName={inputClasses.join(' ')}\r\n\t\t\tonChange={props.changed} \r\n\t\t\tvalue={props.value} >\r\n\t\t\t\t{props.elementConfig.options.map(option => (\r\n\t\t\t\t\t<option key={option.value} value={option.value}>\r\n\t\t\t\t\t\t{option.displayValue}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</select>);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tinputElement = <input className={inputClasses.join(' ')}\r\n\t\t\tonChange={props.changed} {...props.elementConfig} value={props.value} />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.Input} >\r\n\t\t\t<label className={classes.Label} >{props.label}</label>\r\n\t\t\t{inputElement}\r\n\t\t\t{validationError}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1YpNJ\",\"Label\":\"Input_Label__1BbMU\",\"InputElement\":\"Input_InputElement__1aSXt\",\"Invalid\":\"Input_Invalid__NjziX\",\"ValidationError\":\"Input_ValidationError__3NPBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2QIqZ\"};"],"sourceRoot":""}