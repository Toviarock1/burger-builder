{"version":3,"sources":["components/Burger/Burger.module.css","components/Burger/BurgerIngredient/BurgerIngredient.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Burger/BurgerIngredient/BurgerIngredient.jsx","components/Burger/Burger.jsx","components/Burger/BuildControls/BuildControls.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControl/BuildControl.jsx","components/Burger/BuildControls/BuildControls.jsx","components/Burger/OrderSummary/OrderSummary.jsx","containers/BurgerBuilder/BurgerBuilder.jsx","components/UI/Button/Button.jsx","components/UI/Button/Button.module.css"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","BurgerIngredient","props","ingredient","type","className","classes","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","keys","ingredients","map","igKey","_","i","reduce","el","concat","length","Burger","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientRemoved","ingredientAdded","ordered","purchasable","OrderButton","isAuth","OrderSummary","ingredientSummary","style","textTransform","Fragment","Button","btnType","clicked","purchaseCanceled","purchaseContinued","withErrorHandler","useState","purchasing","setPurchasing","dispatch","useDispatch","ings","useSelector","state","burgerBuilder","totalPrice","error","isAuthenticated","auth","token","onInitIngredients","useCallback","actions","useEffect","purchaseCancelHandler","disabledInfo","key","orderSummary","Spinner","ingName","sum","path","history","push","Modal","show","modalClosed","axios","button","join","children"],"mappings":"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","file":"static/js/4.3fa005c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nconst BurgerIngredient = (props) => {\n    let ingredient = null;\n\n    switch (props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={classes.Meat}></div>;\n            break;\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese}></div>;\n            break;\n        case ('salad'):\n            ingredient = <div className={classes.Salad}></div>;\n            break;\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon}></div>;\n            break;\n        default:\n            ingredient = null;\n    }\n    return ingredient;\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","import React from 'react'\n\nimport classes from './BuildControl.module.css';\n\nconst BuildControl = (props) => {\n    return (\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n            <button className={classes.More} onClick={props.added}>More</button>\n        </div>\n    )\n}\n\nexport default BuildControl;\n","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type:'salad'},\n    {label: 'Bacon', type:'bacon'},\n    {label: 'Cheese', type:'cheese'},\n    {label: 'Meat', type:'meat'},\n];\n\nconst buildControls = (props) => {\n    return (\n        <div className={classes.BuildControls}>\n            <p>Currnt Price: <strong>{props.price.toFixed(2)}</strong></p>\n            {\n                controls.map(ctrl => (\n                    <BuildControl \n                    key={ctrl.label} \n                    label={ctrl.label}\n                    disabled={props.disabled[ctrl.type]}\n                    removed={() => props.ingredientRemoved(ctrl.type)}\n                    added={() => props.ingredientAdded(ctrl.type)}/>\n                ))\n            }\n            <button \n                onClick={props.ordered}\n                disabled={!props.purchasable}\n                className={classes.OrderButton}\n                >\n                {props.isAuth ? 'ORDER NOW' : 'SIGNUP TO ORDER' }\n                </button>\n        </div>\n    )\n}\n\nexport default buildControls;\n","import React from \"react\";\nimport Button from \"./../../UI/Button/Button.jsx\";\n\nconst OrderSummary = (props) => {\n  const ingredientSummary = Object.keys(props.ingredients).map((igKey) => {\n    return (\n      <li key={igKey}>\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\n        {props.ingredients[igKey]}\n      </li>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <h3>Your Order</h3>\n      <p>A delicious burger with the following ingredients:</p>\n      <ul>{ingredientSummary}</ul>\n      <p>\n        <strong>Total Price: {props.price.toFixed(2)}</strong>\n      </p>\n      <p>Continue to Checkout?</p>\n      <Button btnType=\"Danger\" clicked={props.purchaseCanceled}>\n        CANCEL\n      </Button>\n      <Button btnType=\"Success\" clicked={props.purchaseContinued}>\n        CONTINUE\n      </Button>\n    </React.Fragment>\n  );\n}\n\nexport default OrderSummary;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\nconst BurgerBuilder = (props) => {\n    const [purchasing, setPurchasing] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const ings = useSelector(state => state.burgerBuilder.ingredients)\n    const price = useSelector(state => state.burgerBuilder.totalPrice)\n    const error = useSelector(state => state.burgerBuilder.error)\n    const isAuthenticated = useSelector(state => state.auth.token !== null)\n\n    const onIngredientAdded = (ingName) => dispatch(actions.addIngredient(ingName));\n    const onIngredientRemoved = (ingName) => dispatch(actions.removeIngredient(ingName));\n    const onInitIngredients = useCallback(() => dispatch(actions.initIngredients()), [dispatch]);\n    const onInitPurchase = () => dispatch(actions.purchaseInit());\n    const onSetAuthRedirectPath = (path) => dispatch(actions.setAuthRedirectPath(path));\n\n\n    useEffect(() => {\n        onInitIngredients();\n    }, [onInitIngredients])\n\n    const updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        return sum > 0;\n    }\n\n    const purchaseHandler = () => {\n        if (isAuthenticated) {\n            setPurchasing(true);\n        } else {\n            onSetAuthRedirectPath('/checkout');\n            props.history.push('/auth');\n        }\n    }\n\n    const purchaseCancelHandler = () => {\n        setPurchasing(false);\n    }\n\n    const purchaseContinueHandler = () => {\n        onInitPurchase();\n        props.history.push('/checkout');\n    }\n\n\n    const disabledInfo = {\n        ...ings\n    };\n    for (let key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0\n    }\n    let orderSummary = null;\n    let burger = error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n    if (ings) {\n        burger = (\n            <>\n                <Burger ingredients={ings} />\n                <BuildControls\n                    ingredientAdded={onIngredientAdded}\n                    ingredientRemoved={onIngredientRemoved}\n                    disabled={disabledInfo}\n                    purchasable={updatePurchaseState(ings)}\n                    ordered={purchaseHandler}\n                    isAuth={isAuthenticated}\n                    price={price} />\n            </>\n        );\n        orderSummary = <OrderSummary\n            ingredients={ings}\n            price={price}\n            purchaseCanceled={purchaseCancelHandler}\n            purchaseContinued={purchaseContinueHandler} />;\n    }\n    // {salad: true, meat: false, ...}\n    return (\n        <>\n            <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\n                {orderSummary}\n            </Modal>\n            {burger}\n        </>\n    );\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n\t<button\n\t\tclassName={[classes.Button, classes[props.btnType]].join(' ')}\n\t\tdisabled={props.disabled}\n\t\tonClick={props.clicked}>\n\t\t\t{props.children}\n\t</button>\n);\n\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};"],"sourceRoot":""}