{"version":3,"sources":["axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/dashboard.js","components/UI/Spinner/Spinner.jsx","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Backdrop/Backdrop.jsx","shared/utility.js","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/Drawertoggle/Drawertoggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.module.css","assets/images/28.1 burger-logo.png.png","components/Logo/Logo.jsx","components/Navigation/NavigationItems/NavigationItem/NavigationItem.jsx","components/Navigation/NavigationItems/NavigationItems.jsx","components/Navigation/SideDrawer/Drawertoggle/Drawertoggle.jsx","components/Navigation/Toolbar/Toolbar.jsx","components/Navigation/SideDrawer/SideDrawer.jsx","hoc/Layout/Layout.jsx","containers/Dashboard/Dashboard.js","App.js","registerServiceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","store/reducers/dashboard.js","index.js"],"names":["instance","axios","create","baseURL","module","exports","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","DASHBOARD_GET_INFO_START","DASHBOARD_GET_INFO_SUCCESS","DASHBOARD_GET_INFO_FAIL","addIngredient","ingName","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","console","log","orders","fetchedOrders","key","push","err","authSuccess","idToken","localId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","errorMessage","undefined","message","authFail","setAuthRedirectPath","path","authCheckState","getItem","dashboardGetInfo","info","spinner","className","classes","Loader","Backdrop","props","show","onClick","clicked","updateObject","oldObject","newObject","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","logo","Logo","style","height","src","BurgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","isAuthenticated","admin","drawertoggle","Drawertoggle","toolbar","Toolbar","DrawertoggleClicked","DesktopOnly","isAuth","isAdmin","sideDrawer","attachedClasses","SideDrawer","Closed","open","Open","Fragment","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawertoggleHandler","prevState","this","Content","Component","connect","Dashboard","onGetInfo","dashboard","actions","App","onTryAutoSignup","Auth","lazy","BurgerBuilder","Checkout","Orders","Logout","routes","fallback","Spinner","component","authRedirectPath","withRouter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","totalPrice","building","INGREDIENTS_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","purchaseBurgerStart","newOrder","concat","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authLogout","dashboardGetInfoStart","dashboardGetInfoFail","dashboardGetInfoSuccess","composeEnchancers","compose","rootReducer","combineReducers","burgerBuilder","burgerBuilderReducer","order","orderReducer","authReducer","dashboardReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.73a092ee.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-238eb-default-rtdb.firebaseio.com/'\n})\n\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Closed\":\"SideDrawer_Closed__wRM5T\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'; \n\nexport const DASHBOARD_GET_INFO_START = 'DASHBOARD_GET_INFO_START';\nexport const DASHBOARD_GET_INFO_SUCCESS = 'DASHBOARD_GET_INFO_SUCCESS';\nexport const DASHBOARD_GET_INFO_FAIL = 'DASHBOARD_GET_INFO_FAIL'","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (ingName) => {\n\treturn {\n\t\ttype: actionTypes.ADD_INGREDIENT,\n\t\tingredientName: ingName\n\t};\n};\n\nexport const removeIngredient = (ingName) => {\n\treturn {\n\t\ttype: actionTypes.REMOVE_INGREDIENT,\n\t\tingredientName: ingName\n\t};\n};\n\nexport const setIngredients = (ingredients) => {\n\treturn{\n\t\ttype: actionTypes.SET_INGREDIENTS,\n\t\tingredients: ingredients\n\t};\n};\n\nexport const fetchIngredientsFailed = () => {\n\treturn{\n\t\ttype: actionTypes.FETCH_INGREDIENTS_FAILED,\n\t};\n};\n\nexport const initIngredients = () => {\n\treturn dispatch => {\n\taxios.get(\n    \t\"https://react-my-burger-238eb-default-rtdb.firebaseio.com/ingredients.json\")\n      .then((response) => {\n        dispatch(setIngredients(response.data));\n      })\n      .catch(error => {\n        dispatch(fetchIngredientsFailed());\n      });\n\t};\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = ( error ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = ( orderData, token ) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() );\n        axios.post( '/orders.json?auth=' + token, orderData )\n            .then( response => {\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\n            } )\n            .catch( error => {\n                dispatch( purchaseBurgerFail( error ) );\n            } );\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = ( orders ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = ( error ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        let queryParams;\n        if(userId === 'FTqOeABFGsN0X9nQ5l5tRyrvaou2') {\n            queryParams = '?auth=' + token;\n        }else {\n            queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        }\n        \n        axios.get( '/orders.json' + queryParams)\n            .then( res => {\n                console.log(res);\n                const fetchedOrders = [];\n                for ( let key in res.data ) {\n                    fetchedOrders.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            } )\n            .catch( err => {\n                dispatch(fetchOrdersFail(err));\n            } );\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n\treturn {\n\t\ttype: actionTypes.AUTH_START\n\t};\n};\n\nexport const authSuccess = (idToken, localId) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_SUCCESS,\n\t\tidToken: idToken,\n        userId: localId\n\t};\n};\n\nexport const authFail = (error) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_FAIL,\n\t\terror: error\n\t};\n};\n\nexport const logout = () => {\n\tlocalStorage.removeItem('token');\n\tlocalStorage.removeItem('expirationDate');\n\tlocalStorage.removeItem('userId');\n\treturn {\n\t\ttype: actionTypes.AUTH_LOGOUT\n\t};\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n\treturn dispatch => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000);\n\t};\n};\n\n\nexport const auth = (email, password, isSignup) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\tconst authData = {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\treturnSecureToken: true\n\t\t}\n\t\tlet url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAzIhQgJcJR4AGZnnlbxleXFGDRUKuOn5k';\n\t\tif(!isSignup) {\n\t\t\turl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAzIhQgJcJR4AGZnnlbxleXFGDRUKuOn5k';\n\t\t}\n\t\taxios.post(url, authData)\n\t\t\t.then(response => {\n\t\t\t\tconst expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n\t\t\t\tlocalStorage.setItem('token', response.data.idToken);\n\t\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\n\t\t\t\tlocalStorage.setItem('userId', response.data.localId);\n\t\t\t\tdispatch(authSuccess(response.data.idToken, response.data.localId));\n\t\t\t\tdispatch(checkAuthTimeout(response.data.expiresIn));\n\t\t\t})\n\t\t\t.catch(error => {\n            let errorMessage = error.response === undefined ? error : error.response.data.error;\n            if(errorMessage.message === 'EMAIL_EXISTS') {\n            \t errorMessage.message = 'The email address is already in use by another account'\n            }else if(errorMessage.message === 'EMAIL_NOT_FOUND') {\n            \t errorMessage.message = 'You do not have an accout please sign up';\n            }else if(errorMessage.message === 'INVALID_PASSWORD') {\n            \t errorMessage.message = errorMessage.message = 'Wrong Password';\n            }\n            console.log(errorMessage);\n\t\t\t\tdispatch(authFail(errorMessage));\n\t\t\t})\n\t};};\n\nexport const setAuthRedirectPath = (path) => {\n\treturn {\n\t\ttype: actionTypes.SET_AUTH_REDIRECT_PATH,\n\t\tpath: path\n\t};\n};\n\nexport const authCheckState = () => {\n\treturn dispatch => {\n\t\tconst token = localStorage.getItem('token');\n\t\tif(!token) {\n\t\t\tdispatch(logout());\n\t\t}else {\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'));\n\t\t\tif(expirationDate <= new Date()) {\n\t\t\t\tdispatch(logout);\n\t\t\t}else {\n\t\t\t\tconst userId = localStorage.getItem('userId');\n\t\t\t\tdispatch(authSuccess(token, userId));\n\t\t\t\tdispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n\t\t\t}\n\t\t}\n\t}\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const dashboardGetInfoStart = () => {\n\treturn{\n\t\ttype: actionTypes.DASHBOARD_GET_INFO_START\n\t};\n};\n\nexport const dashboardGetInfoSuccess = (info) => {\n\treturn{\n\t\ttype: actionTypes.DASHBOARD_GET_INFO_SUCCESS,\n\t\tinfo: info\n\t};\n};\n\nexport const dashboardGetInfoFail = (error) => {\n\treturn{\n\t\ttype: actionTypes.DASHBOARD_GET_INFO_FAIL,\n\t\terror: error\n\t};\n};\n\nexport const dashboardGetInfo = (token) => {\n\treturn dispatch => {\n\t\tdispatch(dashboardGetInfoStart());\n\t\tlet queryParams = '?auth=' + token;\n\t\taxios.get('/orders.json' + queryParams)\n\t\t.then(res => {\n\t\t\tdispatch(dashboardGetInfoSuccess(res.data));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(dashboardGetInfoFail(err));\n\t\t})\n\t}\n}","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst spinner = () => <div className={classes.Loader}>Loading...</div>;\n\nexport default spinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","import React from 'react'\n\nimport classes from './Backdrop.module.css';\n\nconst Backdrop = (props) => {\n    return (\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n    );\n}\n\nexport default Backdrop;\n"," export const updateObject = (oldObject, newObject) => {\n \treturn{\n \t\t...oldObject,\n \t \t...newObject\n \t };\n };\n\n export const  checkValidity = (value, rules) =>  {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawertoggle\":\"Drawertoggle_Drawertoggle__gqWaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load6\":\"Spinner_load6__1_74m\",\"round\":\"Spinner_round__3G_CY\"};","export default __webpack_public_path__ + \"static/media/28.1 burger-logo.png.ec69c7f6.png\";","import React from 'react';\n\nimport BurgerLogo from './../../assets/images/28.1 burger-logo.png.png';\nimport classes from './Logo.module.css';\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={BurgerLogo} alt=\"MyBurger\" />\n    </div>\n);\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = (props) => {\n    return (\n        <li className={classes.NavigationItem}>\n            <NavLink \n                to={props.link} \n                exact={props.exact}\n                activeClassName={classes.active}\n            >\n                {props.children}\n            </NavLink>\n        </li>\n    );\n}\n\nexport default navigationItem\n","import React from 'react'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport classes from './NavigationItems.module.css'\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>\n            Burger Builder\n        </NavigationItem>\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">\n                    Orders\n                </NavigationItem> : null}\n        { props.isAuthenticated ? props.admin ? <NavigationItem link=\"/dashboard\">\n                    Dashboard\n                </NavigationItem> : null : null}\n        {!props.isAuthenticated\n            ? <NavigationItem link=\"/auth\">Login</NavigationItem>\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react'\nimport classes from './Drawertoggle.module.css';\n\nconst drawertoggle = (props) => {\n    return (\n        <div className={classes.Drawertoggle} onClick={props.clicked}>\n           <div></div>\n           <div></div>\n           <div></div>\n        </div>\n    )\n}\n\nexport default drawertoggle;\n","import React from 'react'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport Drawertoggle from './../SideDrawer/Drawertoggle/Drawertoggle';\n\nimport classes from './Toolbar.module.css'\n\nconst toolbar = (props) => {\n    return (\n        <header className={classes.Toolbar}>\n            <Drawertoggle clicked={props.DrawertoggleClicked} />\n            <div className={classes.Logo}>\n                <Logo />\n            </div>\n            <nav className={classes.DesktopOnly}>\n                <NavigationItems isAuthenticated={props.isAuth}  admin={props.isAdmin}/>\n            </nav>\n        </header>\n    )\n}\n\nexport default toolbar\n","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Closed];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <React.Fragment>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')} onClick={props.closed} >\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} admin={props.isAdmin}/>\n                </nav>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawertoggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer }\n        });\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <Toolbar\n                    isAuth={this.props.isAuthenticated}\n                    isAdmin={this.props.admin}\n                    DrawertoggleClicked={this.sideDrawertoggleHandler}/>\n                <SideDrawer\n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer}\n                    isAdmin={this.props.admin}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null,\n        admin: state.auth.admin\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\n\nclass Dashboard extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onGetInfo(this.props.token);\n\t}\n\n\t\n\trender() {\n\t\t// let order;\n\t\t// for(order in this.props.info) {\n\t\t// console.log(order);\n\t\t// }\n\t\t// console.log(order)\n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>No of Orders</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>No of Users</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t};\n}\n\nconst mapStateToProps = state => {\n\treturn{\n\t\ttoken: state.auth.token,\n\t\tinfo: state.dashboard.info\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn{\n\t\tonGetInfo: (token) => dispatch(actions.dashboardGetInfo(token))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, { Component, Suspense, lazy } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport * as actions from './store/actions/index';\nimport Spinner from './components/UI/Spinner/Spinner';\nimport Dashboard from './containers/Dashboard/Dashboard';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  }\n\n  render () {\n\n    const Auth = lazy(() => import('./containers/Auth/Auth'));\n    const BurgerBuilder = lazy(() => import('./containers/BurgerBuilder/BurgerBuilder'));\n    const Checkout = lazy(() => import('./containers/Checkout/Checkout'));\n    const Orders = lazy(() => import('./containers/Orders/Orders'));\n    const Logout = lazy(() => import('./containers/Auth/Logout/Logout'));\n\n\n    let routes = (\n      <Suspense fallback={<Spinner />}>\n        <Switch>\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    );\n\n    if ( this.props.isAuthenticated ) {\n      routes = (\n        <Suspense fallback={<Spinner />}>\n            <Switch>\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/orders\" component={Orders} />\n              <Route path=\"/logout\" component={Logout} />\n              <Route path=\"/\" exact component={BurgerBuilder} />\n              <Redirect to={this.props.authRedirectPath} />\n            </Switch>\n        </Suspense>\n      );\n\n      if(this.props.isAdmin) {\n        routes = (\n        <Suspense fallback={<Spinner />}>\n            <Switch>\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/orders\" component={Orders} />\n              <Route path=\"/logout\" component={Logout} />\n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route path=\"/\" exact component={BurgerBuilder} />\n              <Redirect to={this.props.authRedirectPath} />\n            </Switch>\n        </Suspense>\n      );\n      }\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    authRedirectPath: state.auth.authRedirectPath,\n    isAdmin: state.auth.admin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch( actions.authCheckState() )\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\n\n\n const initialState = {\n \tingredients:  null,\n    totalPrice: 4,\n    error: false,\n    building: false\n }\n\n const INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n};\n\nconst addIngredient = (state, action)  => {\n\tconst updatedIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] + 1}\n\tconst updatedIngredients = updateObject(state.ingredients, updatedIngredient)\n\tconst updatedState = {\n\t\tingredients: updatedIngredients,\n\t\tbuilding: true,\n\t\ttotalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName]\n\t}\n\treturn updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n\tconst updatedIng = {[action.ingredientName] : state.ingredients[action.ingredientName] - 1}\n\tconst updatedIngs = updateObject(state.ingredients, updatedIng)\n\tconst updatedSt = {\n\t\tingredients: updatedIngs,\n\t\tbuilding: true,\n\t\ttotalPrice: state.totalPrice - INGREDIENTS_PRICES[action.ingredientName]\n\t}\n\treturn updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n\treturn updateObject(state, {\n\t\t\tingredients: {\n                salad: action.ingredients.salad,\n                bacon: action.ingredients.bacon,\n                cheese: action.ingredients.cheese,\n                meat: action.ingredients.meat\n            },\n\t\t\terror: false,\n\t\t\ttotalPrice: 4,\n\t\t\tbuilding: false\n\t\t})\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n\treturn updateObject(state, {error: true})\n};\n\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\n\t\tcase actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n\t\tcase actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\n\t\tcase actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state,action);\t\t\t\n\t\tdefault: return state;\n\t}\n\t\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\n\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchaseInit = (state,action) => {\n    return updateObject(state, {purchased: false});\n};\n\nconst purchaseBurgerStart = (state, action) => {\n    return updateObject(state,{loading: true});\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n     const newOrder = updateObject(action.orderData,{\n        id: action.orderId\n    })\n    return updateObject(state,{\n        purchased: true,\n        loading: false,\n        orders: state.orders.concat(newOrder)\n    });\n};\n\nconst purchaseBurgerFail = (state, action) => {\n     return updateObject(state, {loading: false});\n}\n\nconst fetchOrdersStart = (state, action) => {\n    return updateObject(state, {loading: true})\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n    return updateObject(state,{\n        orders: action.orders,\n        loading: false\n    });\n};\n\nconst fetchOrdersFail = (state, action) => {\n    return updateObject(state,{\n        error: action.error,\n        loading: false\n    })\n};\n\nconst reducer = (state = initialState, action ) => {\n    switch(action.type) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action)\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action)\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action)\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/',\n    admin: false\n};\n\nconst authStart = (state, action) => {\n    return updateObject(state, {error: null, loading: true});\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        admin: action.userId === 'FTqOeABFGsN0X9nQ5l5tRyrvaou2' ? true : false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null, \n        userId: null,\n        admin: action.userId === 'FTqOeABFGsN0X9nQ5l5tRyrvaou2' ? true : false}\n    );\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {authRedirectPath: action.path});\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\n        default: return state;\n    }\n};\n\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n\tloading: false,\n\tinfo: null,\n\terror: null\n}\n\nconst dashboardGetInfoStart = (state, action) => {\n\treturn updateObject(state, {loading: true});\n}\n\nconst dashboardGetInfoFail = (state, action) => {\n\treturn updateObject(state, {loading: false, error: action.error});\n}\n\nconst dashboardGetInfoSuccess = (state, action) => {\n\treturn updateObject(state, {loading: false, info: action.info});\n}\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase actionTypes.DASHBOARD_GET_INFO_START: return dashboardGetInfoStart(state, action);\n\t\tcase actionTypes.DASHBOARD_GET_INFO_SUCCESS: return dashboardGetInfoSuccess(state, action);\n\t\tcase actionTypes.DASHBOARD_GET_INFO_FAIL: return dashboardGetInfoFail(state, action);\n\t\tdefault: return state;\n\t};\n}\n\nexport default reducer;","import React from 'react';\nimport { BrowserRouter  } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport dashboardReducer from './store/reducers/dashboard';\nimport thunk from 'redux-thunk';\n\nconst composeEnchancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n\tburgerBuilder: burgerBuilderReducer,\n\torder: orderReducer,\n    auth: authReducer,\n    dashboard: dashboardReducer\n});\n\nconst store = createStore(rootReducer,  composeEnchancers(\n\tapplyMiddleware(thunk)\n));\n\nconst app = (\n\n\t<Provider store={store} >\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n\t);\n\n\nReactDOM.render( app, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}