{"version":3,"sources":["components/UI/Input/Input.jsx","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js","components/UI/Button/Button.jsx","components/UI/Button/Button.module.css"],"names":["input","props","inputElement","validationError","inputClasses","classes","InputElement","invalid","touched","className","ValidationError","shouldValidate","push","Invalid","elementType","join","onChange","changed","elementConfig","value","options","map","option","displayValue","Input","Label","label","module","exports","connect","state","loading","auth","error","isAuthenticated","token","buildingBurger","burgerBuilder","building","authRedirectPath","dispatch","onAuth","email","password","isSignup","actions","onSetAuthRedirectPath","useState","type","placeholder","validation","required","isEmail","valid","minLength","controls","setControls","setIsSignup","useEffect","formElementsArray","key","id","config","form","formElement","event","controlName","updatedControls","updateObject","target","checkValidity","inputChangedHandler","errorMessage","message","Auth","onSubmit","preventDefault","btnType","clicked","button","Button","disabled","onClick","children"],"mappings":"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","file":"static/js/5.cc534594.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n\tlet inputElement = null;\n\tlet validationError = null;\n\tconst inputClasses = [classes.InputElement];\n\n\tif(props.invalid && props.touched) {\n\t\tvalidationError = (<p className={classes.ValidationError} >Please enter a valid value</p>);\n\t}\n\n\tif(props.invalid && props.shouldValidate && props.touched) {\n\t\tinputClasses.push(classes.Invalid);\n\t}\n\n\tswitch (props.elementType){\n\t\tcase ('input'):\n\t\t\tinputElement = <input className={inputClasses.join(' ')}\n\t\t\tonChange={props.changed} {...props.elementConfig} value={props.value} />;\n\t\t\tbreak;\n\t\tcase ('textarea'):\n\t\t\tinputElement = <textarea className={inputClasses.join(' ')}\n\t\t\tonChange={props.changed} {...props.elementConfig} value={props.value} />;\n\t\t\tbreak;\n\t\tcase ('select'):\n\t\t\tinputElement = (<select\tclassName={inputClasses.join(' ')}\n\t\t\tonChange={props.changed} \n\t\t\tvalue={props.value} >\n\t\t\t\t{props.elementConfig.options.map(option => (\n\t\t\t\t\t<option key={option.value} value={option.value}>\n\t\t\t\t\t\t{option.displayValue}\n\t\t\t\t\t</option>\n\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</select>);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = <input className={inputClasses.join(' ')}\n\t\t\tonChange={props.changed} {...props.elementConfig} value={props.value} />;\n\t}\n\n\treturn (\n\t\t<div className={classes.Input} >\n\t\t\t<label className={classes.Label} >{props.label}</label>\n\t\t\t{inputElement}\n\t\t\t{validationError}\n\t\t</div>\n\t);\n};\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport classes from \"./Auth.module.css\";\nimport * as actions from \"../../store/actions/index\";\nimport { updateObject, checkValidity } from \"../../shared/utility\";\n\nconst Auth = (props) => {\n  const [controls, setControls] = useState({\n    email: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"email\",\n        placeholder: \"Mail Address\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      valid: false,\n      touched: false,\n    },\n    password: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"password\",\n        placeholder: \"Password\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 6,\n      },\n      valid: false,\n      touched: false,\n    },\n  });\n  const [isSignup, setIsSignup] = useState(true);\n  const { buildingBurger, authRedirectPath, onSetAuthRedirectPath } = props\n\n  useEffect(() => {\n    if (!buildingBurger && authRedirectPath !== \"/\") {\n      onSetAuthRedirectPath();\n    }\n  }, [buildingBurger, authRedirectPath, onSetAuthRedirectPath]);\n\n  const inputChangedHandler = (event, controlName) => {\n    const updatedControls = updateObject(controls, {\n      [controlName]: updateObject(controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          controls[controlName].validation\n        ),\n        touched: true,\n      }),\n    });\n    setControls(updatedControls);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onAuth(controls.email.value, controls.password.value, isSignup);\n  };\n\n  const switchAuthModeHandler = () => {\n    setIsSignup(!isSignup);\n  };\n\n  const formElementsArray = [];\n  for (let key in controls) {\n    formElementsArray.push({\n      id: key,\n      config: controls[key],\n    });\n  }\n\n  let form = formElementsArray.map((formElement) => (\n    <Input\n      key={formElement.id}\n      elementType={formElement.config.elementType}\n      elementConfig={formElement.config.elementConfig}\n      value={formElement.config.value}\n      invalid={!formElement.config.valid}\n      shouldValidate={formElement.config.validation}\n      touched={formElement.config.touched}\n      changed={(event) => inputChangedHandler(event, formElement.id)}\n    />\n  ));\n\n  if (props.loading) {\n    form = <Spinner />;\n  }\n\n  let errorMessage = null;\n\n  if (props.error) {\n    errorMessage = <p>{props.error.message}</p>;\n  }\n\n  return (\n    <div className={classes.Auth}>\n      {errorMessage}\n      <form onSubmit={submitHandler}>\n        {form}\n        <Button btnType=\"Success\">SUBMIT</Button>\n      </form>\n      <Button clicked={switchAuthModeHandler} btnType=\"Danger\">\n        SWITCH TO {isSignup ? \"SIGNIN\" : \"SIGNUP\"}\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    buildingBurger: state.burgerBuilder.building,\n    authRedirectPath: state.auth.authRedirectPath,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (email, password, isSignup) =>\n      dispatch(actions.auth(email, password, isSignup)),\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\")),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n\t<button\n\t\tclassName={[classes.Button, classes[props.btnType]].join(' ')}\n\t\tdisabled={props.disabled}\n\t\tonClick={props.clicked}>\n\t\t\t{props.children}\n\t</button>\n);\n\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};"],"sourceRoot":""}