{"version":3,"sources":["axios-orders.js","components/UI/Spinner/Spinner.jsx","store/actions/actionTypes.js","components/Navigation/SideDrawer/SideDrawer.module.css","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/dashboard.js","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Backdrop/Backdrop.jsx","shared/utility.js","components/Order/Order.jsx","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/Drawertoggle/Drawertoggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.module.css","components/Order/Order.module.css","assets/images/28.1 burger-logo.png.png","components/Logo/Logo.jsx","components/Navigation/NavigationItems/NavigationItem/NavigationItem.jsx","components/Navigation/NavigationItems/NavigationItems.jsx","components/Navigation/SideDrawer/Drawertoggle/Drawertoggle.jsx","components/Navigation/Toolbar/Toolbar.jsx","components/Navigation/SideDrawer/SideDrawer.jsx","hoc/Layout/Layout.jsx","containers/Dashboard/Dashboard.js","App.js","registerServiceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","store/reducers/dashboard.js","index.js"],"names":["instance","axios","create","baseURL","spinner","className","classes","Loader","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","DASHBOARD_GET_INFO_START","DASHBOARD_GET_INFO_SUCCESS","DASHBOARD_GET_INFO_FAIL","module","exports","addIngredient","ingName","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","userId","token","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","purchaseInit","fetchOrdersSuccess","orders","fetchOrdersFail","fetchOrders","res","console","log","fetchedOrdersStart","fetchedOrdersEnd","key","key2","push","map","err","fetchedOrders","authSuccess","idToken","localId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","errorMessage","undefined","message","authFail","setAuthRedirectPath","path","authCheckState","getItem","dashboardGetInfo","queryParams","info","Backdrop","props","show","onClick","clicked","updateObject","oldObject","newObject","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","order","amount","ingredientOutput","ig","style","textTransform","display","margin","border","padding","Order","price","toFixed","click","logo","Logo","height","src","BurgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","isAuthenticated","admin","drawertoggle","Drawertoggle","toolbar","Toolbar","DrawertoggleClicked","DesktopOnly","isAuth","isAdmin","sideDrawer","attachedClasses","SideDrawer","Closed","open","Open","Fragment","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawertoggleHandler","prevState","this","Content","Component","connect","Dashboard","deleteOrderHandler","route","delete","onGetInfo","onGetORders","users","Spinner","Object","keys","dashboard","actions","App","onTryAutoSignup","Auth","lazy","BurgerBuilder","Checkout","Orders","Logout","routes","fallback","component","authRedirectPath","withRouter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","totalPrice","building","INGREDIENTS_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","purchaseBurgerStart","newOrder","concat","fetchOrdersStart","authStart","authLogout","dashboardGetInfoStart","dashboardGetInfoFail","dashboardGetInfoSuccess","composeEnchancers","compose","rootReducer","combineReducers","burgerBuilder","burgerBuilderReducer","orderReducer","authReducer","dashboardReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e3fda181.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-238eb-default-rtdb.firebaseio.com/'\n})\n\nexport default instance;","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst spinner = () => <div className={classes.Loader}>Loading...</div>;\n\nexport default spinner;\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'; \n\nexport const DASHBOARD_GET_INFO_START = 'DASHBOARD_GET_INFO_START';\nexport const DASHBOARD_GET_INFO_SUCCESS = 'DASHBOARD_GET_INFO_SUCCESS';\nexport const DASHBOARD_GET_INFO_FAIL = 'DASHBOARD_GET_INFO_FAIL'","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Closed\":\"SideDrawer_Closed__wRM5T\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (ingName) => {\n\treturn {\n\t\ttype: actionTypes.ADD_INGREDIENT,\n\t\tingredientName: ingName\n\t};\n};\n\nexport const removeIngredient = (ingName) => {\n\treturn {\n\t\ttype: actionTypes.REMOVE_INGREDIENT,\n\t\tingredientName: ingName\n\t};\n};\n\nexport const setIngredients = (ingredients) => {\n\treturn{\n\t\ttype: actionTypes.SET_INGREDIENTS,\n\t\tingredients: ingredients\n\t};\n};\n\nexport const fetchIngredientsFailed = () => {\n\treturn{\n\t\ttype: actionTypes.FETCH_INGREDIENTS_FAILED,\n\t};\n};\n\nexport const initIngredients = () => {\n\treturn dispatch => {\n\taxios.get(\n    \t\"https://react-my-burger-238eb-default-rtdb.firebaseio.com/ingredients.json\")\n      .then((response) => {\n        dispatch(setIngredients(response.data));\n      })\n      .catch(error => {\n        dispatch(fetchIngredientsFailed());\n      });\n\t};\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = (orderData, userId, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post(`/users/${userId}/orders.json?auth=${token}`, orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error));\n            });\n        // dispatch( purchaseBurgerStart() );\n        // axios.post( '/orders.json?auth=' + token, orderData )\n        //     .then( response => {\n        //         dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\n        //     } )\n        //     .catch( error => {\n        //         dispatch( purchaseBurgerFail( error ) );\n        //     } );\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        // let queryParams;\n        if (userId === 'FTqOeABFGsN0X9nQ5l5tRyrvaou2') {\n            axios.get(`/users.json?auth=${token}`)\n                .then(res => {\n                    console.log(res);\n                    const fetchedOrdersStart = [];\n                    const fetchedOrdersEnd = [];\n                    for (const key in res.data) {\n                        for (const key2 in res.data[key]) {\n                            fetchedOrdersStart.push({\n                                ...res.data[key][key2]\n                            });\n                        }\n                    }\n                    \n                    fetchedOrdersStart.map(orders => {\n                        for (const key in orders) {\n                            fetchedOrdersEnd.push({...orders[key], id: key})\n                        }\n                    })\n                    dispatch(fetchOrdersSuccess(fetchedOrdersEnd));\n                })\n                .catch(err => {\n                    dispatch(fetchOrdersFail(err));\n                });\n        } else {\n            axios.get(`/users/${userId}/orders.json?auth=${token}`)\n                .then(res => {\n                    console.log(res);\n                    const fetchedOrders = [];\n                    for (let key in res.data) {\n                        fetchedOrders.push({\n                            ...res.data[key],\n                            id: key\n                        });\n                    }\n                    dispatch(fetchOrdersSuccess(fetchedOrders));\n                })\n                .catch(err => {\n                    dispatch(fetchOrdersFail(err));\n                });\n        }\n\n        // let queryParams;\n        // if(userId === 'FTqOeABFGsN0X9nQ5l5tRyrvaou2') {\n        //     queryParams = '?auth=' + token;\n        // }else {\n        //     queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        // }\n\n        // axios.get( '/orders.json' + queryParams)\n        //     .then( res => {\n        //         console.log(res);\n        //         const fetchedOrders = [];\n        //         for ( let key in res.data ) {\n        //             fetchedOrders.push( {\n        //                 ...res.data[key],\n        //                 id: key\n        //             } );\n        //         }\n        //         dispatch(fetchOrdersSuccess(fetchedOrders));\n        //     } )\n        //     .catch( err => {\n        //         dispatch(fetchOrdersFail(err));\n        //     } );\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n\treturn {\n\t\ttype: actionTypes.AUTH_START\n\t};\n};\n\nexport const authSuccess = (idToken, localId) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_SUCCESS,\n\t\tidToken: idToken,\n        userId: localId\n\t};\n};\n\nexport const authFail = (error) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_FAIL,\n\t\terror: error\n\t};\n};\n\nexport const logout = () => {\n\tlocalStorage.removeItem('token');\n\tlocalStorage.removeItem('expirationDate');\n\tlocalStorage.removeItem('userId');\n\treturn {\n\t\ttype: actionTypes.AUTH_LOGOUT\n\t};\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n\treturn dispatch => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000);\n\t};\n};\n\n\nexport const auth = (email, password, isSignup) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\tconst authData = {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\treturnSecureToken: true\n\t\t}\n\t\tlet url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAzIhQgJcJR4AGZnnlbxleXFGDRUKuOn5k';\n\t\tif(!isSignup) {\n\t\t\turl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAzIhQgJcJR4AGZnnlbxleXFGDRUKuOn5k';\n\t\t}\n\t\taxios.post(url, authData)\n\t\t\t.then(response => {\n\t\t\t\tconst expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n\t\t\t\tlocalStorage.setItem('token', response.data.idToken);\n\t\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\n\t\t\t\tlocalStorage.setItem('userId', response.data.localId);\n\t\t\t\tdispatch(authSuccess(response.data.idToken, response.data.localId));\n\t\t\t\tdispatch(checkAuthTimeout(response.data.expiresIn));\n\t\t\t})\n\t\t\t.catch(error => {\n            let errorMessage = error.response === undefined ? error : error.response.data.error;\n            if(errorMessage.message === 'EMAIL_EXISTS') {\n            \t errorMessage.message = 'The email address is already in use by another account'\n            }else if(errorMessage.message === 'EMAIL_NOT_FOUND') {\n            \t errorMessage.message = 'You do not have an accout please sign up';\n            }else if(errorMessage.message === 'INVALID_PASSWORD') {\n            \t errorMessage.message = errorMessage.message = 'Wrong Password';\n            }\n            console.log(errorMessage);\n\t\t\t\tdispatch(authFail(errorMessage));\n\t\t\t})\n\t};};\n\nexport const setAuthRedirectPath = (path) => {\n\treturn {\n\t\ttype: actionTypes.SET_AUTH_REDIRECT_PATH,\n\t\tpath: path\n\t};\n};\n\nexport const authCheckState = () => {\n\treturn dispatch => {\n\t\tconst token = localStorage.getItem('token');\n\t\tif(!token) {\n\t\t\tdispatch(logout());\n\t\t}else {\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'));\n\t\t\tif(expirationDate <= new Date()) {\n\t\t\t\tdispatch(logout);\n\t\t\t}else {\n\t\t\t\tconst userId = localStorage.getItem('userId');\n\t\t\t\tdispatch(authSuccess(token, userId));\n\t\t\t\tdispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n\t\t\t}\n\t\t}\n\t}\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const dashboardGetInfoStart = () => {\n\treturn{\n\t\ttype: actionTypes.DASHBOARD_GET_INFO_START\n\t};\n};\n\nexport const dashboardGetInfoSuccess = (info) => {\n\treturn{\n\t\ttype: actionTypes.DASHBOARD_GET_INFO_SUCCESS,\n\t\tinfo: info\n\t};\n};\n\nexport const dashboardGetInfoFail = (error) => {\n\treturn{\n\t\ttype: actionTypes.DASHBOARD_GET_INFO_FAIL,\n\t\terror: error\n\t};\n};\n\nexport const dashboardGetInfo = (token) => {\n\treturn dispatch => {\n\t\tdispatch(dashboardGetInfoStart());\n\t\tlet queryParams = '?auth=' + token;\n\t\taxios.get('/users.json' + queryParams)\n\t\t.then(res => {\n\t\t\tdispatch(dashboardGetInfoSuccess(res.data));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(dashboardGetInfoFail(err));\n\t\t})\n\t}\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","import React from 'react'\n\nimport classes from './Backdrop.module.css';\n\nconst Backdrop = (props) => {\n    return (\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n    );\n}\n\nexport default Backdrop;\n"," export const updateObject = (oldObject, newObject) => {\n \treturn{\n \t\t...oldObject,\n \t \t...newObject\n \t };\n };\n\n export const  checkValidity = (value, rules) =>  {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n};","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = (props) => {\n\tconst ingredients = [];\n\tfor (let ingredientName in props.ingredients) {\n\t\tingredients.push(\n\t\t{\n\t\tname: ingredientName,\n\t\tamount: props.ingredients[ingredientName]\n\t\t}\n\t\t);\n\t}\n\n\tconst ingredientOutput = ingredients.map(ig => {\n\t\treturn (\n\t\t\t<span\n\t\t\t\tstyle={{\n\t\t\t\ttextTransform: 'capitalize',\n\t\t\t\tdisplay: 'inline-block',\n\t\t\t\tmargin: '0 8px',\n\t\t\t\tborder: '1px solid #ccc',\n\t\t\t\tpadding: '5px'\n\t\t\t\t}} \n\t\t\t\tkey={ig.name} >{ig.name} ({ig.amount})</span>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div className={classes.Order} >\n\t\t\t<p>Ingredients: {ingredientOutput}</p>\n\t\t\t<p>Price: <strong>{`${props.price.toFixed(2)} USD`}</strong></p>\n\t\t\t<button onClick={props.click}>recieved burger</button>\n\t\t</div>\n\t); \n}\n\nexport default order;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawertoggle\":\"Drawertoggle_Drawertoggle__gqWaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load6\":\"Spinner_load6__1_74m\",\"round\":\"Spinner_round__3G_CY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","export default __webpack_public_path__ + \"static/media/28.1 burger-logo.png.ec69c7f6.png\";","import React from 'react';\n\nimport BurgerLogo from './../../assets/images/28.1 burger-logo.png.png';\nimport classes from './Logo.module.css';\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={BurgerLogo} alt=\"MyBurger\" />\n    </div>\n);\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = (props) => {\n    return (\n        <li className={classes.NavigationItem}>\n            <NavLink \n                to={props.link} \n                exact={props.exact}\n                activeClassName={classes.active}\n            >\n                {props.children}\n            </NavLink>\n        </li>\n    );\n}\n\nexport default navigationItem\n","import React from 'react'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport classes from './NavigationItems.module.css'\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>\n            Burger Builder\n        </NavigationItem>\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">\n                    Orders\n                </NavigationItem> : null}\n        { props.isAuthenticated ? props.admin ? <NavigationItem link=\"/dashboard\">\n                    Dashboard\n                </NavigationItem> : null : null}\n        {!props.isAuthenticated\n            ? <NavigationItem link=\"/auth\">Login</NavigationItem>\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react'\nimport classes from './Drawertoggle.module.css';\n\nconst drawertoggle = (props) => {\n    return (\n        <div className={classes.Drawertoggle} onClick={props.clicked}>\n           <div></div>\n           <div></div>\n           <div></div>\n        </div>\n    )\n}\n\nexport default drawertoggle;\n","import React from 'react'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport Drawertoggle from './../SideDrawer/Drawertoggle/Drawertoggle';\n\nimport classes from './Toolbar.module.css'\n\nconst toolbar = (props) => {\n    return (\n        <header className={classes.Toolbar}>\n            <Drawertoggle clicked={props.DrawertoggleClicked} />\n            <div className={classes.Logo}>\n                <Logo />\n            </div>\n            <nav className={classes.DesktopOnly}>\n                <NavigationItems isAuthenticated={props.isAuth}  admin={props.isAdmin}/>\n            </nav>\n        </header>\n    )\n}\n\nexport default toolbar\n","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Closed];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <React.Fragment>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')} onClick={props.closed} >\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} admin={props.isAdmin}/>\n                </nav>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawertoggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer }\n        });\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <Toolbar\n                    isAuth={this.props.isAuthenticated}\n                    isAdmin={this.props.admin}\n                    DrawertoggleClicked={this.sideDrawertoggleHandler}/>\n                <SideDrawer\n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer}\n                    isAdmin={this.props.admin}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null,\n        admin: state.auth.admin\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from './../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as actions from '../../store/actions/index';\nimport Order from './../../components/Order/Order';\n\n\nclass Dashboard extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onGetInfo(this.props.token);\n\t\tthis.props.onGetORders(this.props.token, this.props.userId);\n\t}\n\tdeleteOrderHandler = (userId, order, route, token) => {\n\t\taxios.delete(`users/${userId}/orders/${route}.json?auth=${token}`, order)\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}\n\trender() {\n\t\tlet users = this.props.info;\n\t\tlet orders = this.props.orders;\n\t\t// let order;\n\t\t// for(order in this.props.info) {\n\t\t// console.log(order);\n\t\t// }\n\t\t// console.log(order)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<h3>No of Orders</h3>\n\t\t\t\t\t<p>{orders ? orders.length : <Spinner />}</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h3>No of Users</h3>\n\t\t\t\t\t<p>{users ? Object.keys(users).length : <Spinner />}</p>\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\torders.map(order => {\n\t\t\t\t\t\treturn <Order key={order.id}\n\t\t\t\t\t\t\tingredients={order.ingredients}\n\t\t\t\t\t\t\tprice={+order.price}\n\t\t\t\t\t\t\tclick={() => this.deleteOrderHandler(order.userId, order, order.id, this.props.token)}\n\t\t\t\t\t\t/>;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token,\n\t\tuserId: state.auth.userId,\n\t\tinfo: state.dashboard.info,\n\t\torders: state.order.orders\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonGetInfo: (token) => dispatch(actions.dashboardGetInfo(token)),\n\t\tonGetORders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, { Component, Suspense, lazy } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport * as actions from './store/actions/index';\nimport Spinner from './components/UI/Spinner/Spinner';\nimport Dashboard from './containers/Dashboard/Dashboard';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  }\n\n  render () {\n\n    const Auth = lazy(() => import('./containers/Auth/Auth'));\n    const BurgerBuilder = lazy(() => import('./containers/BurgerBuilder/BurgerBuilder'));\n    const Checkout = lazy(() => import('./containers/Checkout/Checkout'));\n    const Orders = lazy(() => import('./containers/Orders/Orders'));\n    const Logout = lazy(() => import('./containers/Auth/Logout/Logout'));\n\n\n    let routes = (\n      <Suspense fallback={<Spinner />}>\n        <Switch>\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    );\n\n    if ( this.props.isAuthenticated ) {\n      routes = (\n        <Suspense fallback={<Spinner />}>\n            <Switch>\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/orders\" component={Orders} />\n              <Route path=\"/logout\" component={Logout} />\n              <Route path=\"/\" exact component={BurgerBuilder} />\n              <Redirect to={this.props.authRedirectPath} />\n            </Switch>\n        </Suspense>\n      );\n\n      if(this.props.isAdmin) {\n        routes = (\n        <Suspense fallback={<Spinner />}>\n            <Switch>\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/orders\" component={Orders} />\n              <Route path=\"/logout\" component={Logout} />\n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route path=\"/\" exact component={BurgerBuilder} />\n              <Redirect to={this.props.authRedirectPath} />\n            </Switch>\n        </Suspense>\n      );\n      }\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    authRedirectPath: state.auth.authRedirectPath,\n    isAdmin: state.auth.admin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch( actions.authCheckState() )\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\n\n\n const initialState = {\n \tingredients:  null,\n    totalPrice: 4,\n    error: false,\n    building: false\n }\n\n const INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n};\n\nconst addIngredient = (state, action)  => {\n\tconst updatedIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] + 1}\n\tconst updatedIngredients = updateObject(state.ingredients, updatedIngredient)\n\tconst updatedState = {\n\t\tingredients: updatedIngredients,\n\t\tbuilding: true,\n\t\ttotalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName]\n\t}\n\treturn updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n\tconst updatedIng = {[action.ingredientName] : state.ingredients[action.ingredientName] - 1}\n\tconst updatedIngs = updateObject(state.ingredients, updatedIng)\n\tconst updatedSt = {\n\t\tingredients: updatedIngs,\n\t\tbuilding: true,\n\t\ttotalPrice: state.totalPrice - INGREDIENTS_PRICES[action.ingredientName]\n\t}\n\treturn updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n\treturn updateObject(state, {\n\t\t\tingredients: {\n                salad: action.ingredients.salad,\n                bacon: action.ingredients.bacon,\n                cheese: action.ingredients.cheese,\n                meat: action.ingredients.meat\n            },\n\t\t\terror: false,\n\t\t\ttotalPrice: 4,\n\t\t\tbuilding: false\n\t\t})\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n\treturn updateObject(state, {error: true})\n};\n\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\n\t\tcase actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n\t\tcase actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\n\t\tcase actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state,action);\t\t\t\n\t\tdefault: return state;\n\t}\n\t\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\n\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchaseInit = (state,action) => {\n    return updateObject(state, {purchased: false});\n};\n\nconst purchaseBurgerStart = (state, action) => {\n    return updateObject(state,{loading: true});\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n     const newOrder = updateObject(action.orderData,{\n        id: action.orderId\n    })\n    return updateObject(state,{\n        purchased: true,\n        loading: false,\n        orders: state.orders.concat(newOrder)\n    });\n};\n\nconst purchaseBurgerFail = (state, action) => {\n     return updateObject(state, {loading: false});\n}\n\nconst fetchOrdersStart = (state, action) => {\n    return updateObject(state, {loading: true})\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n    return updateObject(state,{\n        orders: action.orders,\n        loading: false\n    });\n};\n\nconst fetchOrdersFail = (state, action) => {\n    return updateObject(state,{\n        error: action.error,\n        loading: false\n    })\n};\n\nconst reducer = (state = initialState, action ) => {\n    switch(action.type) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action)\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action)\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action)\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/',\n    admin: false\n};\n\nconst authStart = (state, action) => {\n    return updateObject(state, {error: null, loading: true});\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        admin: action.userId === 'FTqOeABFGsN0X9nQ5l5tRyrvaou2' ? true : false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null, \n        userId: null,\n        admin: action.userId === 'FTqOeABFGsN0X9nQ5l5tRyrvaou2' ? true : false}\n    );\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {authRedirectPath: action.path});\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\n        default: return state;\n    }\n};\n\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n\tloading: false,\n\tinfo: null,\n\terror: null\n}\n\nconst dashboardGetInfoStart = (state, action) => {\n\treturn updateObject(state, {loading: true});\n}\n\nconst dashboardGetInfoFail = (state, action) => {\n\treturn updateObject(state, {loading: false, error: action.error});\n}\n\nconst dashboardGetInfoSuccess = (state, action) => {\n\treturn updateObject(state, {loading: false, info: action.info});\n}\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase actionTypes.DASHBOARD_GET_INFO_START: return dashboardGetInfoStart(state, action);\n\t\tcase actionTypes.DASHBOARD_GET_INFO_SUCCESS: return dashboardGetInfoSuccess(state, action);\n\t\tcase actionTypes.DASHBOARD_GET_INFO_FAIL: return dashboardGetInfoFail(state, action);\n\t\tdefault: return state;\n\t};\n}\n\nexport default reducer;","import React from 'react';\nimport { BrowserRouter  } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport dashboardReducer from './store/reducers/dashboard';\nimport thunk from 'redux-thunk';\n\nconst composeEnchancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n\tburgerBuilder: burgerBuilderReducer,\n\torder: orderReducer,\n    auth: authReducer,\n    dashboard: dashboardReducer\n});\n\nconst store = createStore(rootReducer,  composeEnchancers(\n\tapplyMiddleware(thunk)\n));\n\nconst app = (\n\n\t<Provider store={store} >\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n\t);\n\n\nReactDOM.render( app, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}