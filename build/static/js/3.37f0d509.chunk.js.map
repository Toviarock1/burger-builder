{"version":3,"sources":["components/UI/Input/Input.jsx","components/UI/Input/Input.module.css","components/Burger/Burger.module.css","components/Burger/BurgerIngredient/BurgerIngredient.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Burger/BurgerIngredient/BurgerIngredient.jsx","components/Burger/Burger.jsx","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.jsx","containers/Checkout/ContactData/ContactData.jsx","containers/Checkout/Checkout.jsx","components/UI/Button/Button.jsx","components/UI/Button/Button.module.css"],"names":["input","props","inputElement","validationError","inputClasses","classes","InputElement","invalid","touched","className","ValidationError","shouldValidate","push","Invalid","elementType","join","onChange","changed","elementConfig","value","options","map","option","displayValue","Input","Label","label","module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","keys","ingredients","igKey","_","i","reduce","el","concat","length","Burger","checkoutSummary","CheckoutSummary","style","width","margin","Button","btnType","clicked","oncheckoutCancelled","oncheckoutContinued","connect","state","ings","burgerBuilder","price","totalPrice","loading","order","token","auth","userId","dispatch","onOrderBurger","orderData","actions","withErrorHandler","useState","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","orderForm","setOrderForm","formIsValid","setFormIsValid","formElementsArray","key","id","config","form","onSubmit","event","preventDefault","formData","formElementIdentifier","formElement","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","inputChangedHandler","disabled","Spinner","ContactData","axios","purchased","summary","to","purchasedRedirect","history","goBack","replace","path","match","component","button","onClick","children"],"mappings":"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","file":"static/js/3.37f0d509.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n\tlet inputElement = null;\n\tlet validationError = null;\n\tconst inputClasses = [classes.InputElement];\n\n\tif(props.invalid && props.touched) {\n\t\tvalidationError = (<p className={classes.ValidationError} >Please enter a valid value</p>);\n\t}\n\n\tif(props.invalid && props.shouldValidate && props.touched) {\n\t\tinputClasses.push(classes.Invalid);\n\t}\n\n\tswitch (props.elementType){\n\t\tcase ('input'):\n\t\t\tinputElement = <input className={inputClasses.join(' ')}\n\t\t\tonChange={props.changed} {...props.elementConfig} value={props.value} />;\n\t\t\tbreak;\n\t\tcase ('textarea'):\n\t\t\tinputElement = <textarea className={inputClasses.join(' ')}\n\t\t\tonChange={props.changed} {...props.elementConfig} value={props.value} />;\n\t\t\tbreak;\n\t\tcase ('select'):\n\t\t\tinputElement = (<select\tclassName={inputClasses.join(' ')}\n\t\t\tonChange={props.changed} \n\t\t\tvalue={props.value} >\n\t\t\t\t{props.elementConfig.options.map(option => (\n\t\t\t\t\t<option key={option.value} value={option.value}>\n\t\t\t\t\t\t{option.displayValue}\n\t\t\t\t\t</option>\n\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</select>);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = <input className={inputClasses.join(' ')}\n\t\t\tonChange={props.changed} {...props.elementConfig} value={props.value} />;\n\t}\n\n\treturn (\n\t\t<div className={classes.Input} >\n\t\t\t<label className={classes.Label} >{props.label}</label>\n\t\t\t{inputElement}\n\t\t\t{validationError}\n\t\t</div>\n\t);\n};\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nconst BurgerIngredient = (props) => {\n    let ingredient = null;\n\n    switch (props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={classes.Meat}></div>;\n            break;\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese}></div>;\n            break;\n        case ('salad'):\n            ingredient = <div className={classes.Salad}></div>;\n            break;\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon}></div>;\n            break;\n        default:\n            ingredient = null;\n    }\n    return ingredient;\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n\treturn(\n\t\t<div className={classes.CheckoutSummary} >\n\t\t\t<h1>We hope it tastes well </h1>  \n\t\t\t<div style={{ width:'100%',margin:'auto' }} >\n\t\t\t\t<Burger ingredients={props.ingredients} />\n\t\t\t</div>\n\t\t\t<Button \n\t\t\t\tbtnType='Danger'\n\t\t\t\tclicked={props.oncheckoutCancelled}\n\t\t\t>\n\t\t\t\tCANCEL\n\t\t\t</Button>\n\t\t\t<Button \n\t\t\t\tbtnType='Success'\n\t\t\t\tclicked={props.oncheckoutContinued}\n\t\t\t>\n\t\t\t\tCONTINUE\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n\nexport default checkoutSummary; ","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/WithErrorHandler/WithErrorHandler'\nimport * as actions from '../../../store/actions/index';\nimport { updateObject, checkValidity } from '../../../shared/utility';\n\nconst ContactData = (props) => {\n    const [orderForm, setOrderForm] = useState({\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Your Name'\n            },\n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n        street: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Street'\n            },\n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n        zipCode: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'ZIP Code'\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 5,\n                maxLength: 6,\n                isNumeric: true\n            },\n            valid: false,\n            touched: false\n        },\n        country: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Country'\n            },\n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Your E-Mail'\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false\n        },\n        deliveryMethod: {\n            elementType: 'select',\n            elementConfig: {\n                options: [\n                    { value: 'fastest', displayValue: 'Fastest' },\n                    { value: 'cheapest', displayValue: 'Cheapest' }\n                ]\n            },\n            value: 'fastest',\n            validation: {},\n            valid: true\n        }\n    });\n    const [formIsValid, setFormIsValid] = useState(false)\n\n\n    const orderHandler = (event) => {\n        event.preventDefault();\n\n        const formData = {};\n        for (let formElementIdentifier in orderForm) {\n            formData[formElementIdentifier] = orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: props.ings,\n            price: props.price,\n            orderData: formData,\n            userId: props.userId\n        }\n\n        props.onOrderBurger(order, props.userId, props.token);\n\n    }\n\n\n\n    const inputChangedHandler = (event, inputIdentifier) => {\n\n        const updatedFormElement = updateObject(orderForm[inputIdentifier], {\n            value: event.target.value,\n            valid: checkValidity(event.target.value, orderForm[inputIdentifier].validation),\n            touched: true\n        });\n        const updatedOrderForm = updateObject(orderForm, {\n            [inputIdentifier]: updatedFormElement\n        });\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        setOrderForm(updatedOrderForm);\n        setFormIsValid(formIsValid);\n    }\n\n\n    const formElementsArray = [];\n    for (let key in orderForm) {\n        formElementsArray.push({\n            id: key,\n            config: orderForm[key]\n        });\n    }\n    let form = (\n        <form onSubmit={orderHandler}>\n            {formElementsArray.map(formElement => (\n                <Input\n                    key={formElement.id}\n                    elementType={formElement.config.elementType}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation}\n                    touched={formElement.config.touched}\n                    changed={(event) => inputChangedHandler(event, formElement.id)} />\n            ))}\n            <Button btnType=\"Success\" disabled={!formIsValid}>ORDER</Button>\n        </form>\n    );\n    if (props.loading) {\n        form = <Spinner />;\n    }\n    return (\n        <div className={classes.ContactData}>\n            <h4>Enter your Contact Data</h4>\n            {form}\n        </div>\n    );\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, userId, token) => dispatch(actions.purchaseBurger(orderData, userId, token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport CheckoutSummary from './../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\n\nconst Checkout = (props) => {\n\n\n\t/*componentWillMount() {\n\t\tconst query = new URLSearchParams(props.location.search);\n\t\tconst ingredients = {};\n        let price = 0;\n\t\tfor (let param of query.entries()){\n\t\t\t//['salad', '1']\n            if (param[0] === 'price') {\n                price = param[1];\n            } else {\n\t\t\t ingredients[param[0]] = +param[1];\n            }\n\t\t}\n\t\tconsole.log(ingredients);\n\t\tsetState({ingredients: ingredients, totalPrice: price});\n\t}*/\n\n\t\n\n\tconst checkoutCancelledHandler = () => {\n\t\tprops.history.goBack();\n\t}\n\n\tconst checkoutContinueHandler = () => {\n\t\tprops.history.replace('/checkout/contact-data');\n\t}\n\n\t\tlet summary = <Redirect to='/' />;\n\t\tif(props.ings) {\n\t\t\tconst purchasedRedirect = props.purchased ? <Redirect to='/' /> : null; \n\t\t\tsummary =(\n\t\t\t\t<div>\n\t\t\t\t\t{purchasedRedirect}\n\t\t\t\t\t<CheckoutSummary \n\t\t\t\t\tingredients={props.ings}\n\t\t\t\t\toncheckoutCancelled={checkoutCancelledHandler}\n\t\t\t\t\toncheckoutContinued={checkoutContinueHandler} />\n\n\t\t\t\t\t<Route path={props.match.path + '/contact-data'} component={ContactData} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn summary;\n}\n\nconst mapStateToProps = state => {\n\treturn{\n\t\tings: state.burgerBuilder.ingredients,\n\t\tpurchased: state.order.purchased\n\t};\n};\n\n\nexport default connect( mapStateToProps )(Checkout);","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n\t<button\n\t\tclassName={[classes.Button, classes[props.btnType]].join(' ')}\n\t\tdisabled={props.disabled}\n\t\tonClick={props.clicked}>\n\t\t\t{props.children}\n\t</button>\n);\n\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};"],"sourceRoot":""}