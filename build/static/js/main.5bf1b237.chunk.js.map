{"version":3,"sources":["components/Navigation/SideDrawer/SideDrawer.module.css","axios-orders.js","store/actions/actionTypes.js","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/UI/Backdrop/Backdrop.jsx","shared/utility.js","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/Drawertoggle/Drawertoggle.module.css","components/UI/Backdrop/Backdrop.module.css","assets/images/28.1 burger-logo.png.png","components/Logo/Logo.jsx","components/Navigation/NavigationItems/NavigationItem/NavigationItem.jsx","components/Navigation/NavigationItems/NavigationItems.jsx","components/Navigation/SideDrawer/Drawertoggle/Drawertoggle.jsx","components/Navigation/Toolbar/Toolbar.jsx","components/Navigation/SideDrawer/SideDrawer.jsx","hoc/Layout/Layout.jsx","App.js","registerServiceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","addIngredient","ingName","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","push","err","authSuccess","idToken","localId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","errorMessage","undefined","message","console","log","authFail","setAuthRedirectPath","path","authCheckState","getItem","Backdrop","props","show","className","classes","onClick","clicked","updateObject","oldObject","newObject","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","logo","Logo","style","height","src","BurgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","isAuthenticated","drawertoggle","Drawertoggle","toolbar","Toolbar","DrawertoggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Closed","open","Open","Fragment","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawertoggleHandler","prevState","this","Content","Component","connect","App","onTryAutoSignup","Auth","lazy","BurgerBuilder","Checkout","Orders","Logout","routes","fallback","component","authRedirectPath","withRouter","actions","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","totalPrice","building","INGREDIENTS_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","purchaseBurgerStart","newOrder","concat","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authLogout","composeEnchancers","compose","rootReducer","combineReducers","burgerBuilder","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5bf1b237.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1aB0v\",\"Open\":\"SideDrawer_Open__1TfF9\",\"Closed\":\"SideDrawer_Closed__3XxfL\",\"Logo\":\"SideDrawer_Logo__52_DP\"};","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-238eb-default-rtdb.firebaseio.com/'\n})\n\nexport default instance;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3IQIm\",\"Logo\":\"Toolbar_Logo__3vEgs\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2-cZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1ohQ-\",\"active\":\"NavigationItem_active__10wUK\"};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (ingName) => {\r\n\treturn {\r\n\t\ttype: actionTypes.ADD_INGREDIENT,\r\n\t\tingredientName: ingName\r\n\t};\r\n};\r\n\r\nexport const removeIngredient = (ingName) => {\r\n\treturn {\r\n\t\ttype: actionTypes.REMOVE_INGREDIENT,\r\n\t\tingredientName: ingName\r\n\t};\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n\treturn{\r\n\t\ttype: actionTypes.SET_INGREDIENTS,\r\n\t\tingredients: ingredients\r\n\t};\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n\treturn{\r\n\t\ttype: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n\t};\r\n};\r\n\r\nexport const initIngredients = () => {\r\n\treturn dispatch => {\r\n\taxios.get(\r\n    \t\"https://react-my-burger-238eb-default-rtdb.firebaseio.com/ingredients.json\")\r\n      .then((response) => {\r\n        dispatch(setIngredients(response.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchIngredientsFailed());\r\n      });\r\n\t};\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = ( orderData, token ) => {\r\n    return dispatch => {\r\n        dispatch( purchaseBurgerStart() );\r\n        axios.post( '/orders.json?auth=' + token, orderData )\r\n            .then( response => {\r\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\r\n            } )\r\n            .catch( error => {\r\n                dispatch( purchaseBurgerFail( error ) );\r\n            } );\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = ( orders ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get( '/orders.json' + queryParams)\r\n            .then( res => {\r\n                const fetchedOrders = [];\r\n                for ( let key in res.data ) {\r\n                    fetchedOrders.push( {\r\n                        ...res.data[key],\r\n                        id: key\r\n                    } );\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            } )\r\n            .catch( err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            } );\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_START\r\n\t};\r\n};\r\n\r\nexport const authSuccess = (idToken, localId) => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_SUCCESS,\r\n\t\tidToken: idToken,\r\n        userId: localId\r\n\t};\r\n};\r\n\r\nexport const authFail = (error) => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_FAIL,\r\n\t\terror: error\r\n\t};\r\n};\r\n\r\nexport const logout = () => {\r\n\tlocalStorage.removeItem('token');\r\n\tlocalStorage.removeItem('expirationDate');\r\n\tlocalStorage.removeItem('userId');\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_LOGOUT\r\n\t};\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n\treturn dispatch => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(logout());\r\n\t\t}, expirationTime * 1000);\r\n\t};\r\n};\r\n\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n\treturn dispatch => {\r\n\t\tdispatch(authStart());\r\n\t\tconst authData = {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t\treturnSecureToken: true\r\n\t\t}\r\n\t\tlet url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAzIhQgJcJR4AGZnnlbxleXFGDRUKuOn5k';\r\n\t\tif(!isSignup) {\r\n\t\t\turl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAzIhQgJcJR4AGZnnlbxleXFGDRUKuOn5k';\r\n\t\t}\r\n\t\taxios.post(url, authData)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n\t\t\t\tlocalStorage.setItem('token', response.data.idToken);\r\n\t\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\r\n\t\t\t\tlocalStorage.setItem('userId', response.data.localId);\r\n\t\t\t\tdispatch(authSuccess(response.data.idToken, response.data.localId));\r\n\t\t\t\tdispatch(checkAuthTimeout(response.data.expiresIn));\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n            let errorMessage = error.response === undefined ? error : error.response.data.error;\r\n            if(errorMessage.message === 'EMAIL_EXISTS') {\r\n            \t errorMessage.message = 'The email address is already in use by another account'\r\n            }else if(errorMessage.message === 'EMAIL_NOT_FOUND') {\r\n            \t errorMessage.message = 'You do not have an accout please sign up';\r\n            }else if(errorMessage.message === 'INVALID_PASSWORD') {\r\n            \t errorMessage.message = errorMessage.message = 'Wrong Password';\r\n            }\r\n            console.log(errorMessage);\r\n\t\t\t\tdispatch(authFail(errorMessage));\r\n\t\t\t})\r\n\t};};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n\treturn {\r\n\t\ttype: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n\t\tpath: path\r\n\t};\r\n};\r\n\r\nexport const authCheckState = () => {\r\n\treturn dispatch => {\r\n\t\tconst token = localStorage.getItem('token');\r\n\t\tif(!token) {\r\n\t\t\tdispatch(logout());\r\n\t\t}else {\r\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n\t\t\tif(expirationDate <= new Date()) {\r\n\t\t\t\tdispatch(logout);\r\n\t\t\t}else {\r\n\t\t\t\tconst userId = localStorage.getItem('userId');\r\n\t\t\t\tdispatch(authSuccess(token, userId));\r\n\t\t\t\tdispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};","import React from 'react'\n\nimport classes from './Backdrop.module.css';\n\nconst Backdrop = (props) => {\n    return (\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n    );\n}\n\nexport default Backdrop;\n"," export const updateObject = (oldObject, newObject) => {\r\n \treturn{\r\n \t\t...oldObject,\r\n \t \t...newObject\r\n \t };\r\n };\r\n\r\n export const  checkValidity = (value, rules) =>  {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n    \r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__24Xgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2gy3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3Qv1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawertoggle\":\"Drawertoggle_Drawertoggle__2jaXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__SbwA5\"};","export default __webpack_public_path__ + \"static/media/28.1 burger-logo.png.ec69c7f6.png\";","import React from 'react';\n\nimport BurgerLogo from './../../assets/images/28.1 burger-logo.png.png';\nimport classes from './Logo.module.css';\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={BurgerLogo} alt=\"MyBurger\" />\n    </div>\n);\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = (props) => {\n    return (\n        <li className={classes.NavigationItem}>\n            <NavLink \n                to={props.link} \n                exact={props.exact}\n                activeClassName={classes.active}\n            >\n                {props.children}\n            </NavLink>\n        </li>\n    );\n}\n\nexport default navigationItem\n","import React from 'react'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport classes from './NavigationItems.module.css'\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>\n            Burger Builder\n        </NavigationItem>\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">\n                    Orders\n                </NavigationItem> : null}\n        {!props.isAuthenticated \n            ? <NavigationItem link=\"/auth\">Login</NavigationItem>\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n    </ul>\n);\n\nexport default navigationItems\n","import React from 'react'\nimport classes from './Drawertoggle.module.css';\n\nconst drawertoggle = (props) => {\n    return (\n        <div className={classes.Drawertoggle} onClick={props.clicked}>\n           <div></div>\n           <div></div>\n           <div></div>\n        </div>\n    )\n}\n\nexport default drawertoggle;\n","import React from 'react'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport Drawertoggle from './../SideDrawer/Drawertoggle/Drawertoggle';\n\nimport classes from './Toolbar.module.css'\n\nconst toolbar = (props) => {\n    return (\n        <header className={classes.Toolbar}>\n            <Drawertoggle clicked={props.DrawertoggleClicked} />\n            <div className={classes.Logo}>\n                <Logo />\n            </div>\n            <nav className={classes.DesktopOnly}>\n                <NavigationItems isAuthenticated={props.isAuth} />\n            </nav>\n        </header>\n    )\n}\n\nexport default toolbar\n","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Closed];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <React.Fragment>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')} onClick={props.closed} >\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth}/>\n                </nav>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawertoggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer }\n        });\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <Toolbar\n                    isAuth={this.props.isAuthenticated}\n                    DrawertoggleClicked={this.sideDrawertoggleHandler}/>\n                <SideDrawer\n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import React, { Component, Suspense, lazy } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport * as actions from './store/actions/index';;\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  }\n\n  render () {\n\n    const Auth = lazy(() => import('./containers/Auth/Auth'));\n    const BurgerBuilder = lazy(() => import('./containers/BurgerBuilder/BurgerBuilder'));\n    const Checkout = lazy(() => import('./containers/Checkout/Checkout'));\n    const Orders = lazy(() => import('./containers/Orders/Orders'));\n    const Logout = lazy(() => import('./containers/Auth/Logout/Logout'));\n\n\n    let routes = (\n      <Suspense fallback={<h1>loading</h1>}>\n        <Switch>\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    );\n\n    if ( this.props.isAuthenticated ) {\n      routes = (\n        <Suspense fallback={<h1>loading</h1>}>\n            <Switch>\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/orders\" component={Orders} />\n              <Route path=\"/logout\" component={Logout} />\n              <Route path=\"/\" exact component={BurgerBuilder} />\n              <Redirect to={this.props.authRedirectPath} />\n            </Switch>\n        </Suspense>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch( actions.authCheckState() )\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\n\r\n\r\n const initialState = {\r\n \tingredients:  null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n }\r\n\r\n const INGREDIENTS_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7,\r\n};\r\n\r\nconst addIngredient = (state, action)  => {\r\n\tconst updatedIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] + 1}\r\n\tconst updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n\tconst updatedState = {\r\n\t\tingredients: updatedIngredients,\r\n\t\tbuilding: true,\r\n\t\ttotalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName]\r\n\t}\r\n\treturn updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n\tconst updatedIng = {[action.ingredientName] : state.ingredients[action.ingredientName] - 1}\r\n\tconst updatedIngs = updateObject(state.ingredients, updatedIng)\r\n\tconst updatedSt = {\r\n\t\tingredients: updatedIngs,\r\n\t\tbuilding: true,\r\n\t\ttotalPrice: state.totalPrice - INGREDIENTS_PRICES[action.ingredientName]\r\n\t}\r\n\treturn updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\t\tingredients: {\r\n                salad: action.ingredients.salad,\r\n                bacon: action.ingredients.bacon,\r\n                cheese: action.ingredients.cheese,\r\n                meat: action.ingredients.meat\r\n            },\r\n\t\t\terror: false,\r\n\t\t\ttotalPrice: 4,\r\n\t\t\tbuilding: false\r\n\t\t})\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n\treturn updateObject(state, {error: true})\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n\t\tcase actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n\t\tcase actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n\t\tcase actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state,action);\t\t\t\r\n\t\tdefault: return state;\r\n\t}\r\n\t\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\n\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst purchaseInit = (state,action) => {\r\n    return updateObject(state, {purchased: false});\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state,{loading: true});\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n     const newOrder = updateObject(action.orderData,{\r\n        id: action.orderId\r\n    })\r\n    return updateObject(state,{\r\n        purchased: true,\r\n        loading: false,\r\n        orders: state.orders.concat(newOrder)\r\n    });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n     return updateObject(state, {loading: false});\r\n}\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, {loading: true})\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state,{\r\n        orders: action.orders,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state,{\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n};\r\n\r\nconst reducer = (state = initialState, action ) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action)\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action)\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action)\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {token: null, userId: null})\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path});\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\n\r\nexport default reducer;","import React from 'react';\nimport { BrowserRouter  } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n\nconst composeEnchancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n\tburgerBuilder: burgerBuilderReducer,\n\torder: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer,  composeEnchancers(\n\tapplyMiddleware(thunk)\n));\n\nconst app = (\n\n\t<Provider store={store} >\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n\t);\n\n\nReactDOM.render( app, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}